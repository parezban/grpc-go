// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.9.2
// source: notification.proto

package notification

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewDonutNotificationRequest_Action int32

const (
	NewDonutNotificationRequest_NEW    NewDonutNotificationRequest_Action = 0
	NewDonutNotificationRequest_UPDATE NewDonutNotificationRequest_Action = 1
	NewDonutNotificationRequest_DELETE NewDonutNotificationRequest_Action = 2
)

// Enum value maps for NewDonutNotificationRequest_Action.
var (
	NewDonutNotificationRequest_Action_name = map[int32]string{
		0: "NEW",
		1: "UPDATE",
		2: "DELETE",
	}
	NewDonutNotificationRequest_Action_value = map[string]int32{
		"NEW":    0,
		"UPDATE": 1,
		"DELETE": 2,
	}
)

func (x NewDonutNotificationRequest_Action) Enum() *NewDonutNotificationRequest_Action {
	p := new(NewDonutNotificationRequest_Action)
	*p = x
	return p
}

func (x NewDonutNotificationRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewDonutNotificationRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_proto_enumTypes[0].Descriptor()
}

func (NewDonutNotificationRequest_Action) Type() protoreflect.EnumType {
	return &file_notification_proto_enumTypes[0]
}

func (x NewDonutNotificationRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NewDonutNotificationRequest_Action.Descriptor instead.
func (NewDonutNotificationRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{0, 0}
}

type NewDonutNotificationResponse_Action int32

const (
	NewDonutNotificationResponse_NEW    NewDonutNotificationResponse_Action = 0
	NewDonutNotificationResponse_UPDATE NewDonutNotificationResponse_Action = 1
	NewDonutNotificationResponse_DELETE NewDonutNotificationResponse_Action = 2
)

// Enum value maps for NewDonutNotificationResponse_Action.
var (
	NewDonutNotificationResponse_Action_name = map[int32]string{
		0: "NEW",
		1: "UPDATE",
		2: "DELETE",
	}
	NewDonutNotificationResponse_Action_value = map[string]int32{
		"NEW":    0,
		"UPDATE": 1,
		"DELETE": 2,
	}
)

func (x NewDonutNotificationResponse_Action) Enum() *NewDonutNotificationResponse_Action {
	p := new(NewDonutNotificationResponse_Action)
	*p = x
	return p
}

func (x NewDonutNotificationResponse_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewDonutNotificationResponse_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_proto_enumTypes[1].Descriptor()
}

func (NewDonutNotificationResponse_Action) Type() protoreflect.EnumType {
	return &file_notification_proto_enumTypes[1]
}

func (x NewDonutNotificationResponse_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NewDonutNotificationResponse_Action.Descriptor instead.
func (NewDonutNotificationResponse_Action) EnumDescriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{1, 0}
}

type NewDonutNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string                             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Action NewDonutNotificationRequest_Action `protobuf:"varint,3,opt,name=action,proto3,enum=notification.NewDonutNotificationRequest_Action" json:"action,omitempty"`
}

func (x *NewDonutNotificationRequest) Reset() {
	*x = NewDonutNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDonutNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDonutNotificationRequest) ProtoMessage() {}

func (x *NewDonutNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDonutNotificationRequest.ProtoReflect.Descriptor instead.
func (*NewDonutNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{0}
}

func (x *NewDonutNotificationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewDonutNotificationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewDonutNotificationRequest) GetAction() NewDonutNotificationRequest_Action {
	if x != nil {
		return x.Action
	}
	return NewDonutNotificationRequest_NEW
}

type NewDonutNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32                               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Message string                              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Action  NewDonutNotificationResponse_Action `protobuf:"varint,3,opt,name=action,proto3,enum=notification.NewDonutNotificationResponse_Action" json:"action,omitempty"`
}

func (x *NewDonutNotificationResponse) Reset() {
	*x = NewDonutNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDonutNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDonutNotificationResponse) ProtoMessage() {}

func (x *NewDonutNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDonutNotificationResponse.ProtoReflect.Descriptor instead.
func (*NewDonutNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{1}
}

func (x *NewDonutNotificationResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewDonutNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NewDonutNotificationResponse) GetAction() NewDonutNotificationResponse_Action {
	if x != nil {
		return x.Action
	}
	return NewDonutNotificationResponse_NEW
}

type ListDonutsNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDonutsNotificationsRequest) Reset() {
	*x = ListDonutsNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDonutsNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDonutsNotificationsRequest) ProtoMessage() {}

func (x *ListDonutsNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDonutsNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListDonutsNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{2}
}

var File_notification_proto protoreflect.FileDescriptor

var file_notification_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x29, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45,
	0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0xbe, 0x01, 0x0a, 0x1c,
	0x4e, 0x65, 0x77, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x29, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x45, 0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0x20, 0x0a, 0x1e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x82,
	0x02, 0x0a, 0x0e, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x75, 0x0a, 0x1a, 0x4e, 0x65, 0x77, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x41, 0x72, 0x72,
	0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e,
	0x65, 0x77, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x44, 0x6f, 0x6e,
	0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x6f, 0x6e, 0x75, 0x74, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4e, 0x65, 0x77, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notification_proto_rawDescOnce sync.Once
	file_notification_proto_rawDescData = file_notification_proto_rawDesc
)

func file_notification_proto_rawDescGZIP() []byte {
	file_notification_proto_rawDescOnce.Do(func() {
		file_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_notification_proto_rawDescData)
	})
	return file_notification_proto_rawDescData
}

var file_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_notification_proto_goTypes = []interface{}{
	(NewDonutNotificationRequest_Action)(0),  // 0: notification.NewDonutNotificationRequest.Action
	(NewDonutNotificationResponse_Action)(0), // 1: notification.NewDonutNotificationResponse.Action
	(*NewDonutNotificationRequest)(nil),      // 2: notification.NewDonutNotificationRequest
	(*NewDonutNotificationResponse)(nil),     // 3: notification.NewDonutNotificationResponse
	(*ListDonutsNotificationsRequest)(nil),   // 4: notification.ListDonutsNotificationsRequest
}
var file_notification_proto_depIdxs = []int32{
	0, // 0: notification.NewDonutNotificationRequest.action:type_name -> notification.NewDonutNotificationRequest.Action
	1, // 1: notification.NewDonutNotificationResponse.action:type_name -> notification.NewDonutNotificationResponse.Action
	2, // 2: notification.DonutsNotifier.NewDonutArriveNotification:input_type -> notification.NewDonutNotificationRequest
	4, // 3: notification.DonutsNotifier.ListDonutsNotifications:input_type -> notification.ListDonutsNotificationsRequest
	3, // 4: notification.DonutsNotifier.NewDonutArriveNotification:output_type -> notification.NewDonutNotificationResponse
	3, // 5: notification.DonutsNotifier.ListDonutsNotifications:output_type -> notification.NewDonutNotificationResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_notification_proto_init() }
func file_notification_proto_init() {
	if File_notification_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDonutNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDonutNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDonutsNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notification_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_proto_goTypes,
		DependencyIndexes: file_notification_proto_depIdxs,
		EnumInfos:         file_notification_proto_enumTypes,
		MessageInfos:      file_notification_proto_msgTypes,
	}.Build()
	File_notification_proto = out.File
	file_notification_proto_rawDesc = nil
	file_notification_proto_goTypes = nil
	file_notification_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DonutsNotifierClient is the client API for DonutsNotifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DonutsNotifierClient interface {
	// Sends a new donut notification
	NewDonutArriveNotification(ctx context.Context, in *NewDonutNotificationRequest, opts ...grpc.CallOption) (*NewDonutNotificationResponse, error)
	ListDonutsNotifications(ctx context.Context, opts ...grpc.CallOption) (DonutsNotifier_ListDonutsNotificationsClient, error)
}

type donutsNotifierClient struct {
	cc grpc.ClientConnInterface
}

func NewDonutsNotifierClient(cc grpc.ClientConnInterface) DonutsNotifierClient {
	return &donutsNotifierClient{cc}
}

func (c *donutsNotifierClient) NewDonutArriveNotification(ctx context.Context, in *NewDonutNotificationRequest, opts ...grpc.CallOption) (*NewDonutNotificationResponse, error) {
	out := new(NewDonutNotificationResponse)
	err := c.cc.Invoke(ctx, "/notification.DonutsNotifier/NewDonutArriveNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *donutsNotifierClient) ListDonutsNotifications(ctx context.Context, opts ...grpc.CallOption) (DonutsNotifier_ListDonutsNotificationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DonutsNotifier_serviceDesc.Streams[0], "/notification.DonutsNotifier/ListDonutsNotifications", opts...)
	if err != nil {
		return nil, err
	}
	x := &donutsNotifierListDonutsNotificationsClient{stream}
	return x, nil
}

type DonutsNotifier_ListDonutsNotificationsClient interface {
	Send(*ListDonutsNotificationsRequest) error
	Recv() (*NewDonutNotificationResponse, error)
	grpc.ClientStream
}

type donutsNotifierListDonutsNotificationsClient struct {
	grpc.ClientStream
}

func (x *donutsNotifierListDonutsNotificationsClient) Send(m *ListDonutsNotificationsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *donutsNotifierListDonutsNotificationsClient) Recv() (*NewDonutNotificationResponse, error) {
	m := new(NewDonutNotificationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DonutsNotifierServer is the server API for DonutsNotifier service.
type DonutsNotifierServer interface {
	// Sends a new donut notification
	NewDonutArriveNotification(context.Context, *NewDonutNotificationRequest) (*NewDonutNotificationResponse, error)
	ListDonutsNotifications(DonutsNotifier_ListDonutsNotificationsServer) error
}

// UnimplementedDonutsNotifierServer can be embedded to have forward compatible implementations.
type UnimplementedDonutsNotifierServer struct {
}

func (*UnimplementedDonutsNotifierServer) NewDonutArriveNotification(context.Context, *NewDonutNotificationRequest) (*NewDonutNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDonutArriveNotification not implemented")
}
func (*UnimplementedDonutsNotifierServer) ListDonutsNotifications(DonutsNotifier_ListDonutsNotificationsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListDonutsNotifications not implemented")
}

func RegisterDonutsNotifierServer(s *grpc.Server, srv DonutsNotifierServer) {
	s.RegisterService(&_DonutsNotifier_serviceDesc, srv)
}

func _DonutsNotifier_NewDonutArriveNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewDonutNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DonutsNotifierServer).NewDonutArriveNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notification.DonutsNotifier/NewDonutArriveNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DonutsNotifierServer).NewDonutArriveNotification(ctx, req.(*NewDonutNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DonutsNotifier_ListDonutsNotifications_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DonutsNotifierServer).ListDonutsNotifications(&donutsNotifierListDonutsNotificationsServer{stream})
}

type DonutsNotifier_ListDonutsNotificationsServer interface {
	Send(*NewDonutNotificationResponse) error
	Recv() (*ListDonutsNotificationsRequest, error)
	grpc.ServerStream
}

type donutsNotifierListDonutsNotificationsServer struct {
	grpc.ServerStream
}

func (x *donutsNotifierListDonutsNotificationsServer) Send(m *NewDonutNotificationResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *donutsNotifierListDonutsNotificationsServer) Recv() (*ListDonutsNotificationsRequest, error) {
	m := new(ListDonutsNotificationsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DonutsNotifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "notification.DonutsNotifier",
	HandlerType: (*DonutsNotifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewDonutArriveNotification",
			Handler:    _DonutsNotifier_NewDonutArriveNotification_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListDonutsNotifications",
			Handler:       _DonutsNotifier_ListDonutsNotifications_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "notification.proto",
}
